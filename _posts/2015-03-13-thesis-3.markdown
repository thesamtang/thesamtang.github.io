---
layout: post
title: "Thesis[3] - Build update: new parts!"
date: 2015-03-13
categories: thesis
---

Motion sensing + LEDs seems like a viable choice, let's upgrade the components!

![Adafruit NeoPixel LED strip][fig1]
**Figure 1.** Adafruit NeoPixel LED strip

I bought 3 meters of [Adafruit NeoPixel LED strip][1] to replace the individual LEDs I had in my previous prototype. The LEDs on the NeoPixel are individually addressable and only need one pin on the Arduino, allowing me to control the brightness and color of strip exactly as I need it to be.

![MaxBotix MaxSonar-EZ0][fig2]
**Figure 2.** MaxBotix MaxSonar-EZ0

For the motion sensor, I ditched the Leap Motion in favor of an [MaxBotix MaxSonar-EZ0][2] ultrasonic sensor. The Leap is great for tracking hand motion and gestures, but not much else. My installation needs to be able to track the position of a full human body, and MaxBotix's ultrasonic sensors handle this very well while providing a high degree of accuracy and ease of use.

With these changes, I also switched from coding the logic using NodeJS + Johnny Five to the Arduino language. Johnny Five allowed me to easily interface with the Leap Motion using the websocket module, but I no longer need to use the Leap. In addition, Adafruit provides an Arduino language [library][3] for interfacing easily with the NeoPixel strip, and there is also a [library][4] for the MaxBotix sensors as well, written by Bruce Allen.

I've included a video below of everything hooked up, as well as the code I used:

[![Youtube video of 2nd prototype](http://img.youtube.com/vi/zMjC8Y-et88/0.jpg)](http://www.youtube.com/watch?feature=player_embedded&v=zMjC8Y-et88)

{% highlight c %}
#include <Adafruit_NeoPixel.h>
#include <avr/power.h>

#define PIN 6
#define SONAR A0
#define ARRLEN 30

long anVolt;
int brightness = 120;
uint16_t prevLed = 0;
uint16_t currLed = 0;

int values[ARRLEN];
long pulse;
int inches;

Adafruit_NeoPixel strip = Adafruit_NeoPixel(90, PIN, NEO_GRB + NEO_KHZ800);

void setup() {
  Serial.begin(9600);
  pinMode(SONAR, INPUT);
  strip.begin();

  // Initialize the strip to all white
  for(uint16_t i=0; i<strip.numPixels(); i++) {
      strip.setPixelColor(i, strip.Color(100, 100, 100));
      strip.setBrightness(brightness);
      strip.show();
  }
}

void loop() {
  
  // Read an array of values from the sonar sensor
  for(int i = 0; i < ARRLEN; i++) {
    anVolt = analogRead(SONAR)/2;
    values[i] = anVolt;
  }
  
  // Use the mode of the values array as the current position
  inches = mode(values, ARRLEN);
  currLed = inches;
  
  Serial.print(currLed);
  Serial.print("in");
  Serial.println();
  
  // Animate the LEDs to shift to the current position
  if (currLed > prevLed) {
    int h = prevLed;
    for (int i = prevLed; i <= currLed; i++) {
      strip.setPixelColor(h, 100, 100, 100);
      strip.setPixelColor(i, 0, 255, 255);
      strip.show();
      h = i;
      delay(20);
    }
  } else if (currLed < prevLed) {
    int h = prevLed;
    for (int i = prevLed; i >= currLed; i--) {
      strip.setPixelColor(h, 100, 100, 100);
      strip.setPixelColor(i, 0, 255, 255);
      strip.show();
      h = i;
      delay(20);
    }
  }
  
  prevLed = currLed;
  delay(50);
}

{% endhighlight %}

As you can see, the sonar tracking works like a charm! Motion sensing + LEDs are still viable. 

I just wanted to give a quick rundown of the components I'm using in this post; I think I'll be able to stick with the NeoPixels and the MaxBotix sensor for the final build. For better results, I think I'll have two ~3m lengths of LEDs, one on either side of the controller. This will give participants time to figure out what is going on with the installation as they're approaching each other from each end. I expect the colorful, flashy nature of the LEDs themselves to attract participants to the installation and influence them to stick around to figure out how it works.

The next step is defining what happens once the participants follow the LEDs and meet up in the middle - what is the reward for choosing to participate and take a step further to interact with another participant? How can I make the experience exclusive enough so as to not reward those who are simply watching others interact with the piece? How can I get people to want to go through the experience multiple times? These are the questions I'll deal with in the next post.

[1]: http://www.adafruit.com/products/1376
[2]: http://www.adafruit.com/products/979
[3]: https://learn.adafruit.com/adafruit-neopixel-uberguide/arduino-library
[4]: http://playground.arduino.cc/Main/MaxSonar

[fig1]: /img/thesis/neopixel.jpg
[fig2]: /img/thesis/ez0.jpg